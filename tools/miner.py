#!/usr/bin/env python

import re
import json

from bs4 import BeautifulSoup

from fetch import Fetch

WOWHEAD_URL = 'http://www.wowhead.com'

def soup(html):
    return BeautifulSoup(html, "html.parser")

def fetch_data():
    fetch = Fetch("wowhead.db")
    
    data = []
    items_page = fetch('%s/items=9' % WOWHEAD_URL)
    items_soup = soup(items_page)
    item_types = items_soup.find('select', attrs={'name': "ty[]"}).find_all('option')
    item_types = (opt['value'] for opt in item_types)
    for item_type in item_types:
        # search for items of type which teach a spell
        type_page = fetch('%s/items=9?filter=ty=%s;cr=168;crs=1;crv=0' % (WOWHEAD_URL, item_type))
        match = re.search(r'var _ = {};\n(_.+)', type_page)
        for itemid_match in re.finditer(r'_\[(\d+)\]=', match.group(1)):
            itemid = itemid_match.group(1)
            # this is the super-lightweight page used for the "powered by wowhead" tooltips
            item_page = fetch('%s/item=%s&power' % (WOWHEAD_URL, itemid))
            name_match = re.search(r"name_enus: '(.+?)',", item_page)
            # Note: there'll be multiple spellid links. I *think* we can trust the first one to be the "teaches" spellid
            spellid_match = re.search(r'<a href="/spell=(\d+)"', item_page)
            if name_match and spellid_match:
                data.append((int(itemid), int(spellid_match.group(1)), name_match.group(1).replace("\'", "'")))
            # else:
            #     print("Couldn't find spellid", itemid, item_page)
    return data


def write_output(filename, data):
    with open(filename, 'w') as f:
        f.write("""-- DO NOT EDIT THIS FILE; run miner.lua to regenerate.
local myname, ns = ...
ns.itemid_to_spellid = {
""")
        for itemid_spellid_name in sorted(data):
            f.write('\t[%d] = %d, -- %s\n' % itemid_spellid_name)
        f.write("}")

if __name__ == '__main__':
    data = fetch_data()
    write_output("../item_spell_map.lua", data)